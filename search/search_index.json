{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#what-is-equinix-metal","title":"What is Equinix Metal?","text":"<p>Equinix Metal is a bare metal as-a-service (BMaaS) offering which allows customers to rapidly and virtually provision physical servers at one of Equinix's many metros around the world.</p>"},{"location":"#about-the-workshop","title":"About the workshop","text":"<p>The goals of this workshop are to have the user:</p> <ul> <li>Become familiar with the Equinix Metal console.</li> <li>Provision a bare metal server in a metro of their choice.</li> <li>Start and test out a sample application.</li> </ul>"},{"location":"#workshop-agenda","title":"Workshop agenda","text":"<p>This workshop is split into three parts:</p> Part Title Duration 1 Setup an Equinix Metal user account 10 minutes 2 Provision a bare metal server and deploy Wordpress with Kubernetes 15 minutes 3 Investigate latency on Equinix Metal with SmokePing 15 minutes"},{"location":"parts/conclusion/","title":"Conclusion","text":"<p>Thank you for participating in the workshop! Let's recap some of the key takeways that we've learned:</p> <ul> <li>You can get started on Equinix Metal for as little as $1/hr</li> <li>Equinix Metal provides access to the Equinix network</li> <li>Equinix Metal does the racking, stacking, and automating of getting your a bare metal server</li> </ul>"},{"location":"parts/conclusion/#resources","title":"Resources","text":"<p>Here are a few other resources to look at to continue your Equinix Metal journey:</p> <ul> <li>Deploy @ Equinix: A one-stop shop for blogs, guides, and plenty of other resources.</li> <li>Equinix Metal Docs: Equinix Metal official documentation.</li> <li>Equinix Metal APIs: Programmatically interact with Equinix Metal</li> <li>Equinix Labs: Provides SDKs and Terraform modultes for Infrastructure as Code tools.</li> <li>Equinix Community: A global community for customers and Equinix users.</li> </ul>"},{"location":"parts/signup/","title":"Part 1: Setup an Equinix Metal Account","text":"<p>One of the quickest way to get started on Equinix Metal is to be invited into an existing organization. Let's do just that. In this part you'll be invited into an organization; you'll sign up for a new account; and you'll login with your new credentials.</p>"},{"location":"parts/signup/#steps","title":"Steps","text":""},{"location":"parts/signup/#1-accept-the-invitation","title":"1. Accept the invitation","text":"<p>Check your inbox. You'll receive an email requesting that you join an organization on Equinix Metal. Click on Accept invitation.</p> <p></p>"},{"location":"parts/signup/#2-create-an-account","title":"2. Create an account","text":"<p>Fill in your first name, last name, email address, and a password. Click on Create account.</p> <p>Tip</p> <ul> <li>Your password needs to be at least 14 characters long.</li> <li>You'll be using your password soon, don't forget it!</li> <li>Note to Equinix employees, this will be a different set of credentials than your SSO.</li> </ul> <p></p>"},{"location":"parts/signup/#3-verify-your-email","title":"3. Verify your email","text":"<p>You'll be asked to verify the email address of the account you just created. Click on Validate My Account.</p> <p></p>"},{"location":"parts/signup/#4-sign-in","title":"4. Sign in","text":"<p>You'll be redirected to a login page. Type in your email address and password and click on Sign In. You're now ready to start creating your first bare metal server!</p> <p></p>"},{"location":"parts/signup/#discussion","title":"Discussion","text":"<p>Before proceeding to the next part let's take a few minutes to discuss what we did. Here are some questions to start the discussion.</p> <ul> <li>What's an organization?</li> <li>What are alternate ways to get started?</li> </ul>"},{"location":"parts/smokeping/","title":"Part 3: Investigate latency on Equinix Metal with SmokePing","text":"<p>In this part we'll investigate what latency is like on Equinix Metal servers.</p>"},{"location":"parts/smokeping/#steps","title":"Steps","text":""},{"location":"parts/smokeping/#1-provision-another-server","title":"1. Provision another server","text":"<p>Navigate back to the On Demand section that we used in the previous part and create another server.</p> <ul> <li>Choose a metro</li> <li>Choose a server type, use  <code>c3.small.x86</code> or <code>m3.small.x86</code>.</li> <li>Choose an operating system, use Ubuntu 20.04 LTS.</li> </ul> <p>Under Select number of servers give your server a unique hostname. Then click on Optional Settings, and then the User data tab.</p> <p></p> <p>Copy and paste the snippet of code below into the text box.</p> YAML<pre><code>#cloud-config\n\n# This cloud-init file is intended to provide a \"no-code\" way of deploying\n# a safe and sane Ubuntu 20.04 instance on Metal\n# It does the following:\n# 1. Updates all packages / system state, including necessary reboots\n# 2. Installs commonly used packages\n# 3. Moves from root user -&gt; adminuser\n# 4. Turns up the firewall with deny all, allow ssh, allow management traffic (10.x.x.x) network)\n# 5. Enables the UFW limit function on ssh to double guard with fail2ban\n# 6. Enables automatic updates (for security, so things like SSHD are automatically updated)\n# 7. Enables fail2ban on SSHD\n# 8. Downloads and runs the metal_smoke_instance.sh\n\n# This is broken while dist-upgrade is available\n# and it is since 22.04\npackage_upgrade: false\npackage_reboot_if_required: false\n\npackages:\n - screen\n - sysbench\n - ethtool\n - fail2ban\n - iperf3\n - lshw\n - pciutils\n - ufw\n - vlan\n - arping\n - unattended-upgrades\n - unzip\n - strace\n - git\n - dnsutils\n - jq\n\ngroups:\n - cloud-users\n\nusers:\n  - name: adminuser\n    primary_group: cloud-users\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: [cloud-users, sudo]\n    shell: /bin/bash\n\ndatasource_list: [Ec2, Equinix]\ndatasource:\n  Ec2:\n    strict_id: false\n\n# keep sshd disabled till everything is done at the end of runcmd\nbootcmd:\n  - [ cloud-init-per, instance, systemctl, start, ssh ]\n  - [ cloud-init-per, instance, systemctl, enable, ssh ]\n\nruncmd:\n  - yes | unminimize  &amp;\n  - [ bash, /usr/lib/apt/apt.systemd.daily ]\n  - systemctl enable fail2ban\n  - systemctl start fail2ban\n  - systemctl enable unattended-upgrades\n  - systemctl start unattended-upgrades\n  - systemctl enable ufw\n  - systemctl start ufw  \n  - ufw default allow outgoing\n  - ufw default deny incoming\n  - ufw allow ssh\n  - ufw allow http\n  - ufw allow from 10.0.0.1/8\n  - ufw limit ssh\n  - ufw enable\n  - echo \"interface ignore wildcard\" &gt;&gt; /etc/ntp.conf\n  - echo \"interface listen 127.0.0.1\" &gt;&gt; /etc/ntp.conf\n  - systemctl restart ntp\n  - modprobe 8021q\n  - echo \"8021q\" &gt;&gt; /etc/modules\n  - mv /root/.ssh /home/adminuser/\n  - chown -R adminuser:cloud-users /home/adminuser/.ssh\n  - sed -i -e '/^#PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config\n  - echo \"DebianBanner no\" &gt;&gt; /etc/ssh/sshd_config\n  - systemctl enable ssh\n  - systemctl start ssh\n  - curl --silent --retry 5 -o /tmp/metal_smoke_instance.sh https://raw.githubusercontent.com/dlotterman/metal_code_snippets/main/smokeping/metal_smoke_instance.sh\n  - chmod 0750 /tmp/metal_smoke_instance.sh\n  - bash /tmp/metal_smoke_instance.sh\n\nwrite_files:\n  - owner: root:root\n    path: /etc/fail2ban/jail.local\n    content: |\n      [DEFAULT]\n      bantime = 3600\n      banaction = ufw\n      ignoreip = 127.0.0.1/8 10.0.0.0/8\n      findtime = 600\n      maxretry = 5\n      [sshd]\n      enabled = true\n      logpath = %(sshd_log)s\n      mode = aggressive\n    permissions: '0644'\n  - owner: root:root\n    path: /etc/apt/apt.conf.d/50unattended-upgrades\n    content: |\n      Unattended-Upgrade::Allowed-Origins {\n      \"${distro_id}:${distro_codename}\";\n      \"${distro_id}:${distro_codename}-updates\";\n      \"${distro_id}:${distro_codename}-security\";\n      \"${distro_id}ESMApps:${distro_codename}-apps-security\";\n      \"${distro_id}ESM:${distro_codename}-infra-security\";\n      };\n    permissions: '0644'\n  - owner: root:root\n    path: /etc/apt/apt.conf.d/21auto-upgrades_on\n    content: |\n      APT::Periodic::Update-Package-Lists \"1\";\n      APT::Periodic::Download-Upgradeable-Packages \"1\";\n      APT::Periodic::AutocleanInterval \"7\";\n      APT::Periodic::Unattended-Upgrade \"1\";\n    permissions: '0644'\n  - owner: root:root\n    path: /etc/crontab\n    append: true\n    content: |\n      05 * * * * root /usr/bin/unattended-upgrade -v\n      05 11 * * * root systemctl restart sshd\n      15 11 * * * root systemctl restart serial-getty@ttyS1.service\n      20 11 * * * root systemctl restart getty@tty1.service\n    permissions: '0644'\n</code></pre> <p>Open discussion</p> <ul> <li>What is this code doing?</li> </ul> <p>Review your settings and click Deploy Now at the bottom of the page.</p>"},{"location":"parts/smokeping/#2-view-the-application","title":"2. View the application","text":"<p>From the left navigation, click on Manage Servers, it's under the Bare metal servers menu. Find the IP address of the server you just provisioned.</p> <p></p> <p>Launch a browser and navigate to the following URL:</p> Text Only<pre><code>http://&lt;ip-address&gt;\n</code></pre> <p>You should now be presented with a running application. In this case, the app running is called Smoke Ping, a tool used to measure latency.</p> <p></p> <p>[!NOTE] Smoke Ping takes up to 4 minutes to install after the server is fully provisioned. As a result, going to the IP Addrress will return nothing for up to 4 minutes.</p>"},{"location":"parts/smokeping/#3-use-smoke-ping-to-find-your-servers-best-and-worst-latency","title":"3. Use Smoke Ping to find your servers best and worst latency","text":"<p>The Smoke Ping application is constantly sending packets to multiple well known endpoints around the world and tracking how long the response takes.</p> <ol> <li>Take a look at the global_metal_routers section to see the average latency to other Equinix Metal endpoints. </li> <li>Take a look at the global_aws_endpoints section to see the average latency for AWS endpoints.</li> <li>Take a look at the global_gcp_endpoints section to see the average latency for GCP endpoints.</li> <li>Take a look at the random_endpoints section to see average latency for Cloudflare (1.1.1.1) and Google (8.8.8.8)</li> </ol> <p>What does your latency look like?</p> <p>If you provionsed a bare metal server in North America your latency should look like this:</p> <ul> <li>Equinix Metal endpoints: 10 - 100 ms</li> <li>AWS endpoints: 50 - 300 ms</li> <li>GCP endpoints: 100 - 600 ms</li> <li>Cloudflare and Google: &lt;1 ms</li> </ul>"},{"location":"parts/smokeping/#4-clean-up-any-resources","title":"4. Clean up any resources","text":"<p>When you've wrapped up this part, don't forget to delete your server.</p> <p></p>"},{"location":"parts/smokeping/#discussion","title":"Discussion","text":"<p>Congratulations on completing the workshop! To wrap things up, let's discuss what was done in this part. Here are some questions to start the discussion.</p> <ul> <li>What was the highest and lowest latency you observed?</li> </ul>"},{"location":"parts/wordpress/","title":"Part 2: Provision a bare metal server and deploy Wordpress with Kubernetes","text":"<p>In this part we'll begin to set up a bare metal server. We'll cover options such as metro locations, server types, and operating system choice.</p> <p>First time seeing the Equinix console?</p> <p>If this is your first time in the Equinix console take a few mintues to familiarize yourself with our navigation menu.</p>"},{"location":"parts/wordpress/#steps","title":"Steps","text":""},{"location":"parts/wordpress/#1-choose-your-server-metro-type-and-operating-system","title":"1. Choose your server metro, type, and operating system","text":"<p>From the navigation menu on the left, under the Bare metal servers option, click on On demand.</p> <p></p> <p>Choose a metro. We suggest the Dallas metro.</p> <p></p> <p>Did you know...?</p> <p>Equinix Metal supports over 20 regions around the world?</p> <p>Choose a server. For our workshop, let's go with a <code>c3.small.x86</code> or <code>m3.small.x86</code> instance.</p> <p></p> <p>Open discussion</p> <ul> <li>What do c3 and m3 mean?</li> <li>What does x86 stand for?</li> <li>For more information about server types, see our documentation.</li> </ul> <p>Choose an operating system. We recommend Ubuntu 20.04 LTS.</p> <p></p>"},{"location":"parts/wordpress/#2-configure-your-server-with-clout-init","title":"2. Configure your server with clout init","text":"<p>Under Select number of servers give your server a unique hostname. Then click on Optional Settings, and then the User data tab.</p> <p></p> <p>Copy and paste the snippet of code below into the text box.</p> YAML<pre><code>#cloud-config\n\nruncmd:\n  - curl -sfL https://get.k3s.io | sh -\n  - sleep 20\n  - kubectl apply -f https://raw.githubusercontent.com/stevemar/metal-code-snippets/main/yaml/wordpress.yaml\n</code></pre> <p>Open discussion</p> <ul> <li>What are cloud init scripts?</li> <li>What is this code doing?</li> </ul> <p>Review your settings and click Deploy Now at the bottom of the page.</p> <p></p> <p>Info</p> <p>This example uses Kubernetes to deploy the sample application. Specifically, it uses k3s, a lightweight Kubernetes distribution. Kubernetes has quickly become the defacto approach for deploying cloud native applications.</p>"},{"location":"parts/wordpress/#3-view-server-details","title":"3. View server details","text":"<p>From the left navigation, click on Manage Servers, it's under the Bare metal servers menu. You'll be presented with several details about all the servers you have deployed.</p> <p>Here you can quickly and easily find information for each server, such as: hostname, server type, public IP address, status, operating system, and location.</p> <p>Let's now click on the server you just created to get more information about it.</p> <p></p> <p>On this page you can do several post-provisioning tasks such as:</p> <ul> <li>Deleting and rebooting the server</li> <li>Viewing inbound and outbound traffic</li> <li>Auditing when and who provisioned the machine</li> </ul> <p>Flip through a few sections to familiarize yourself with the overview page.</p> <p></p>"},{"location":"parts/wordpress/#4-verify-the-application-is-running","title":"4. Verify the application is running","text":"<p>Click on the Network tab and find the public IP address. Copy that IP address. </p> <p></p> <p>Launch a browser and navigate to the following URL:</p> Text Only<pre><code>http://&lt;ip-address&gt;:30001\n</code></pre> <p>You should now be presented with a running application. In this case, the app running is called Wordpress, a popular tool for building websites and blogs.</p> <p></p> <p>Congrats - you just deployed an online website using bare metal and Kubernetes.</p> <p>NOTE: every <code>www.URL.com</code> is actually a number like <code>139.178.87.49</code> but we use domain registrars because words are easier to remember than numbers.</p> <p>Can't access the application?</p> <p>If you're unable to access the application due to network security, try using a personal device, like a phone.</p>"},{"location":"parts/wordpress/#5-clean-up-any-resources","title":"5. Clean up any resources","text":"<p>When you've wrapped up this part, don't forget to delete your server.</p> <p></p>"},{"location":"parts/wordpress/#discussion","title":"Discussion","text":"<p>Before proceeding to the next part let's take a few minutes to discuss what we did. Here are some questions to start the discussion.</p> <ul> <li>What if we wanted to create 60 servers with 6 different locations?</li> <li>What if I want to install my own OS?</li> <li>What is an alternative to cloud init scripts?</li> <li>Let's go through the code that we copied.</li> </ul>"}]}